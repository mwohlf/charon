name: aks-deploy

# using the images from the registry and pushing a deployment into k8s

# see: https://github.com/Azure/actions-workflow-samples/blob/master/Kubernetes/build-and-deploy-docker-image-to-aks-using-helm.yml

on:
  workflow_run:
    workflows: ["gradle-build"]
    types:
      - completed
  workflow_dispatch:

env:
  CLUSTER: charonCluster
  RESOURCE_GROUP: charonResourceGroup
  NAMESPACE: development
  GITHUB_SHA: ${{ github.sha }}
  # this is used to decrypt the file containing the TSL keys
  GPG_PASSPHRASE : ${{ secrets.GPG_PASSPHRASE }}

jobs:
  deploy:
    name: deploy helm chart
    runs-on: ubuntu-latest
    # only run if the build was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v3.3.0 # we need the helm charts
      - uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_SP_CREDENTIALS}}

# the available images are:
#  Built and pushed image as
#    ttl.sh/mwohlf/charon-backend,
#    ttl.sh/mwohlf/charon-backend:4h,
#    ttl.sh/mwohlf/charon-backend:7a15c08962
#    this should match "ttl.sh/mwohlf/charon-backend:${GITHUB_SHA::10}"
#
#      # Container build and push to an Azure Container registry (ACR)
#      - run: |
#          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:${{ github.sha }}
#          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:${{ github.sha }}

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/aks-set-context@v3.2
        with:
          creds: ${{ secrets.AZURE_SP_CREDENTIALS }}
          cluster-name: ${{ env.CLUSTER }}
          resource-group: ${{ env.RESOURCE_GROUP }}

      - name: Run the manage-certs.bash script to create the secrets.yaml file
        run: |
          bash ${{ github.workspace }}/etc/secrets/manage-certs.bash create_secrets

#      # remove the current chart
#      - run: |
#          helm list

      # Baking the helm chart to generate the manifests to deploy
      - name: Create the helm chart
        id: bake
        uses: azure/k8s-bake@v2.4
        with:
          silent: 'false' # set this to get more verbose helm command logs
          renderEngine: 'helm'
          helmChart: '${{ github.workspace }}/etc/helm/charon/'
          helm-version: 'latest'
          # see: https://github.com/marketplace/actions/kubernetes-bake
          # to override the secrets in the helm charts with an env variable (todo)

      # we store images in ttl.sh,
      #  no need for a login, this is not really needed, just in case we want to switch to GitHub's docker registry
      - name: Authenticate to the docker registry
        id: registry-authentication
        uses: docker/login-action@master
        with:
          # registry: registry.gitlab.com
          registry: ghcr.io
          username: mwohlf
          password: ${{ secrets.GHCR_TOKEN }}

      # Deploy app to AKS
      # see: https://github.com/Azure/k8s-deploy
      - name: Deploy on kubernetes
        id: kubernetes-deployment
        uses: azure/k8s-deploy@v4.9
        with:
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ttl.sh/mwohlf/charon-backend:${{ env.GITHUB_SHA }}
            ttl.sh/mwohlf/charon-oauth:${{ env.GITHUB_SHA }}
          namespace: ${{ env.NAMESPACE }}
