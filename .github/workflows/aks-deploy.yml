name: aks-deploy

# using the images from the registry and pushing a deployment into k8s

# see: https://github.com/Azure/actions-workflow-samples/blob/master/Kubernetes/build-and-deploy-docker-image-to-aks-using-helm.yml

on:
  workflow_dispatch:

env:
  CLUSTER: charonCluster
  RESOURCE_GROUP: charonResourceGroup
  NAMESPACE: default
  sha10: ${GITHUB_SHA::10}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main # we need the helm charts

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_CREDENTIALS}}

# the available images are:
#  Built and pushed image as
#    ttl.sh/mwohlf/charon-backend,
#    ttl.sh/mwohlf/charon-backend:4h,
#    ttl.sh/mwohlf/charon-backend:7a15c08962
#    this should match "ttl.sh/mwohlf/charon-backend:${GITHUB_SHA::10}"
#
#      # Container build and push to an Azure Container registry (ACR)
#      - run: |
#          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:${{ github.sha }}
#          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:${{ github.sha }}

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_SP_CREDENTIALS }}
          cluster-name: ${{ env.CLUSTER }}
          resource-group: ${{ env.RESOURCE_GROUP }}

#      # remove the current chart
#      - run: |
#          helm list

      # Baking the helm chart to generate the manifests to deploy
      - uses: azure/k8s-bake@v2.2
        with:
          silent: 'false' # set this to get more verbose helm command logs
          renderEngine: 'helm'
          helmChart: '${{ github.workspace }}/etc/helm/charon/'
          helm-version: 'latest'
        id: bake

# we store images in ttl.sh,
#  no need for a login
#      - name: Authenticate to the docker registry
#        uses: docker/login-action@v2
#        with:
#          # registry: registry.gitlab.com
#          registry: ghcr.io
#          username: mwohlf
#          password: ${{ secrets.GHCR_TOKEN }}

      # Deploy app to AKS
      # see: https://github.com/Azure/k8s-deploy
      - uses: azure/k8s-deploy@v4.2
        with:
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ttl.sh/mwohlf/charon-backend:${{ env.SHA10 }}
          namespace: ${{ env.NAMESPACE }}
