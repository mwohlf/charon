
apiVersion: apps/v1
kind: Deployment
metadata:
  name: charon-oauth-deployment
  namespace: development
spec:
  selector:
    matchLabels:
      app: charon-oauth
  replicas: 1
  template:
    metadata:
      labels:
        app: charon-oauth
    spec:

      containers:
        - name: charon-oauth
          image: ttl.sh/mwohlf/charon-oauth
          env:
            - name: SERVER_PORT
              value: "8080"
            - name: GOOGLE_CLIENT_ID
              value: {{ .Values.oauth.clients.google.id }}
            - name: GOOGLE_CLIENT_SECRET
              value: {{ .Values.oauth.clients.google.secret }}
            - name: GITHUB_CLIENT_ID
              value: {{ .Values.oauth.clients.github.id }}
            - name: GITHUB_CLIENT_SECRET
              value: {{ .Values.oauth.clients.github.secret }}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 1
            httpGet:
              path: /actuator/health/liveness
              port: 8080

          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 1
            httpGet:
              path: /actuator/health/readiness
              port: 8080


---

apiVersion: v1
kind: Service
metadata:
  name: charon-oauth-svc
  namespace: development
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: charon-oauth
