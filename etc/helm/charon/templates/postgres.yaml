#  kubectl get pods
#  kubectl apply -f ./postgres.yaml
#  kubectl get pods
#  kubectl logs --follow charon-postgres-deployment-0
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: charon-postgres-deployment
  namespace: development

spec:
  selector:
    matchLabels:
      app: charon-postgres
  replicas: 1
  template:

    metadata:
      labels:
        app: charon-postgres

    spec:
      containers:
        - name: charon-postgres
          image: postgres:15.2-alpine
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: wired-heart-secrets
                  key: postgres-user
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: wired-heart-secrets
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wired-heart-secrets
                  key: postgres-password
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: wired-heart-secrets
                  key: postgres-password
            - name: POSTGRES_DB
              value: "oauth"
            - name: PGDATA
              value: "/data/postgres/oauthdb"
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: "/data/postgres"
          readinessProbe:
            exec:
              command: [ "psql", "-U", "oauth", "-d", "oauth", "-c", "SELECT 1" ]
            initialDelaySeconds: 15
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: [ "psql", "-U", "oauth", "-d", "oauth", "-c", "SELECT 1" ]
            initialDelaySeconds: 45
            timeoutSeconds: 2
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: charon-postgres-svc
  namespace: development
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: charon-postgres


---

# https://learn.microsoft.com/en-us/azure/aks/azure-csi-disk-storage-provision
# https://medium.com/codex/kubernetes-persistent-volume-explained-fb27df29c393
# https://www.section.io/docs/tutorials/data/postgres-on-pvc/

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc

spec:
  accessModes:
    - ReadWriteMany
  storageClassName: managed-csi
  resources:
    requests:
      storage: 5Gi
