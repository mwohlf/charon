
# https://github.com/hilariocoelho/redis-chart

apiVersion: apps/v1
kind: Deployment
metadata:
  name: charon-redis-deployment
  namespace: development

spec:
  selector:
    matchLabels:
      app: charon-redis
  replicas: 1
  strategy:
    type: Recreate
  template:

    metadata:
      labels:
        app: charon-redis

    spec:
      containers:
        - name: charon-redis
          image: ttl.sh/mwohlf/charon-redis
          env:
            - name: SERVER_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wired-heart-secrets
                  key: redis-password
          imagePullPolicy: Always
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-data
              mountPath: "/data/redis"
          command:
            - /bin/bash
            - -c
            - redis-server --requirepass ${REDIS_PASSWORD} --masterauth ${REDIS_PASSWORD} --port ${SERVER_PORT}
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: postgres-pvc

# see: https://gist.github.com/axe-me/f9a4d77dbecac5858494b5addfaac524

---

apiVersion: v1
kind: Service
metadata:
  name: charon-redis-svc
  namespace: development
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    app: charon-redis


---

# https://learn.microsoft.com/en-us/azure/aks/azure-csi-disk-storage-provision
# https://medium.com/codex/kubernetes-persistent-volume-explained-fb27df29c393
# https://www.section.io/docs/tutorials/data/postgres-on-pvc/

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc

spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-csi
  resources:
    requests:
      storage: 5Gi
