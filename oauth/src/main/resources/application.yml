server:
  port: 8080
  error:
    include-exception: false
    include-stacktrace: never
    whitelabel:
      enabled: false

management:
  endpoint:
    health:
      probes:
        enabled: true
  health:
    liveness-state:
      enabled: true
    readiness-state:
      enabled: true

logging:
  level:
    root: INFO

spring:

  datasource:
    # url: jdbc:postgresql://postgres:5432/oauth
    url: jdbc:postgresql://charon-postgres-svc:5432/oauth
    username: ${SPRING_DATASOURCE_USER:unconfigured-spring-datasource-user}
    password: ${SPRING_DATASOURCE_PASSWORD:unconfigured-spring-datasource-password}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 0
      maximum-pool-size: 10
      # initial 3m, we need that long to deploy postgres from scratch
      connection-timeout: 150000
      idle-timeout: 300000 #5m
      max-lifetime: 600000 #10m
      initialization-fail-timeout: -1
      validation-timeout: 1000 #1s
#
# doesn't work with the insert scripts:
  sql:
    init:
      continue-on-error: true

  jpa:
    hibernate:
      ddl-auto: create-drop
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  mail:
    # see: https://springjava.com/spring-boot/sending-mail-using-gmail-smtp-server-in-spring-boot
    host: ${SPRING_MAIL_HOST:unconfigured-spring-mail-host}
    port: ${SPRING_MAIL_PORT:unconfigured-spring-mail-port}
    username: ${SPRING_MAIL_USERNAME:unconfigured-spring-mail-username}
    password: ${SPRING_MAIL_PASSWORD:unconfigured-spring-mail-password}
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  freemarker:
    template-loader-path: classpath:/mail
    charset: UTF-8
    check-template-location: true
    cache: true


net:
  wohlfart:
    charon:
      oauth:
        data-dir: test
        issuer: "https://oauth.wired-heart.com"
        app-home-url: "https://backend.wired-heart.com/charon/home"
        app-login-url: "https://backend.wired-heart.com/charon/login"
        allowed-origins:
          - "https://backend.wired-heart.com"
          - "https://app.wired-heart.com"
        # we need to re-configure all client for each app context
        # because it's a hash map
        clients:
          public-client:
            client-authentication-method: NONE
            authorization-grant-type: AUTHORIZATION_CODE
            access-token-ttl: 5m
            scopes:
              - "openid"
              - "profile"
              - "email"
              - "address"
              - "phone"
              - "offline_access"
              - "message.read"
              - "message.write"
            redirect-uris:
              - "https://backend.wired-heart.com/charon/assets/silent-renew.html"
              - "https://backend.wired-heart.com/charon/silent-renew.html"
              - "https://backend.wired-heart.com/charon/home"
              - "https://app.wired-heart.com/charon/home"
            post-logout-redirect-uri: "https://app.wired-heart.com/charon/home"
 #         readonly-client:
 #           client-authentication-method: BASIC
 #           authorization-grant-type: CLIENT_CREDENTIALS
 #           client-credentials: ${READONLY_CLIENT_CREDENTIALS:unconfigured-readonly-client-credentials}
